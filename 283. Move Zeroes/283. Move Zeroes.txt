Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.

Note that you must do this in-place without making a copy of the array.

 

Example 1:

Input: nums = [0,1,0,3,12]
Output: [1,3,12,0,0]
Example 2:

Input: nums = [0]
Output: [0]
 

Constraints:

1 <= nums.length <= 104
-231 <= nums[i] <= 231 - 1

---------------------------------

class Solution {
    public void moveZeroes(int[] nums) {
         //define left and right pointer
        int left=0,right=0;
        //iterate till the end of the array using right pointer
        while(right<nums.length){
            //if right pointer finds a non zero value
            //store the value to the left pointer's index location, increment left pointer
            //increment right pointer
            if(nums[right]!=0){
                nums[left]=nums[right];
                left++;
            }
                
            
            right++;
        }
        //for the rest of the positions to be visited by left, mark every index's value as 0
        while(left!=0 && left<nums.length){
            nums[left]=0;
            left++;
        }
    }
}